# Author: Xzonn
# Date: 2021-05-23
m = [0] * 0x15b9
g = [0] * 22
v = [0] * 117
g[18] = 4982
g[19] = 5400
g[20] = 4986
g[21] = 5000
key = '.q~03QKLNSp"s6AQtEW<=MNv9(ZMYntg2N9hSe5=k'.encode()
for i in range(len(key)):
    m[5400 + i * 4] = key[i]
m[4986] = len(key)
fla = 'flag{123456789abcdefghijklmnopqrstuvwxyz}'.encode()
for i in range(len(fla)):
    m[5000 + i * 4] = fla[i]
m[4982] = len(fla)

def main():
    global g, v, m
    g[16] = 16
    v[111] = 114514
    stack = [16]
    m[3776] = 0
    m[1952] = 0
    while True:
        v[1] = m[3776]
        v[23] = int(v[1] < 96)
        if v[23] == 0:
            break
        v[34] = m[3776]
        v[45] = m[3776]
        v[56] = 1952 + int(v[45] << 2)
        m[v[56]] = v[34]
        v[67] = m[3776]
        v[78] = v[67] + 1
        m[3776] = v[78]

    m[3776] = 1
    while True:
        v[89] = m[3776]
        v[100] = int(v[89] < 96)
        if v[100] == 0:
            break
        v[2] = v[111]
        v[13] = v[2] * 1919
        v[15] = v[13] + 7
        v[16] = (v[15] % 334363) & -1
        v[111] = v[16]
        v[17] = v[111]
        v[18] = m[3776]
        v[19] = (v[17] % v[18]) & -1
        v[113] = v[19]
        v[20] = v[113]
        v[21] = 1952 + (v[20] << 2)
        v[22] = m[v[21]]
        v[114] = v[22]
        v[24] = m[3776]
        v[25] = 1952 + (v[24] << 2)
        v[26] = m[v[25]]
        v[27] = v[113]
        v[28] = 1952 + (v[27] << 2)
        m[v[28]] = v[26]
        v[29] = v[114]
        v[30] = m[3776]
        v[31] = 1952 + (v[30] << 2)
        m[v[31]] = v[29]
        v[32] = m[3776]
        v[33] = v[32] + 1
        m[3776] = v[33]

    m[3776] = 0
    while True:
        v[35] = m[3776]
        v[36] = m[g[18]]
        v[37] = int(v[35] < v[36])
        if v[37] == 0:
            break
        v[38] = m[3776]
        v[39] = g[21] + (v[38] << 2)
        v[40] = m[v[39]]
        v[41] = v[40] - 32
        v[113] = v[41]
        v[42] = v[113]
        v[43] = int(v[42] < 0)
        v[44] = v[113]
        v[46] = int(v[44] >= 96)
        v[112] = v[43] | v[46]
        if v[112]:
            v[115] = 10
            break
        v[47] = v[113]
        v[48] = 1952 + (v[47] << 2)
        v[49] = m[v[48]]
        v[50] = m[3776]
        v[51] = v[49] + v[50]
        v[52] = (v[51] % 96) & -1
        v[53] = v[52] + 32
        v[54] = m[3776]
        v[55] = 1152 + (v[54] << 2)
        m[v[55]] = v[53]
        v[57] = m[3776]
        v[58] = v[57] + 1
        m[3776] = v[58]

    if v[115] == 10:
        v[0] = -1
        v[14] = v[0]
        g[16] = v[116]
        return v[14]
    
    
    m[3776] = 0
    while True:
        v[59] = m[3776]
        v[60] = m[g[18]]
        v[61] = int(v[59] < v[60])
        if v[61] == 0:
            break
        v[62] = m[3776]
        v[63] = m[3776]
        v[64] = 2336 + (v[63] << 2)
        m[v[64]] = v[62]
        v[65] = m[3776]
        v[66] = v[65] + 1
        m[3776] = v[66]

    m[3776] = 1
    while True:
        v[68] = m[3776]
        v[69] = m[g[18]]
        v[70] = int(v[68] < v[69])
        if v[70] == 0:
            break
        v[71] = v[111]
        v[72] = v[71] * 1919
        v[73] = v[72] + 7
        v[74] = (v[73] % 334363) & -1
        v[111] = v[74]
        v[75] = v[111]
        v[76] = m[3776]
        v[77] = (v[75] % v[76]) & -1
        v[113] = v[77]
        v[79] = v[113]
        v[80] = 2336 + (v[79] << 2)
        v[81] = m[v[80]]
        v[114] = v[81]
        v[82] = m[3776]
        v[83] = 2336 + (v[82] << 2)
        v[84] = m[v[83]]
        v[85] = v[113]
        v[86] = 2336 + (v[85] << 2)
        m[v[86]] = v[84]
        v[87] = v[114]
        v[88] = m[3776]
        v[90] = 2336 + (v[88] << 2)
        m[v[90]] = v[87]
        v[91] = m[3776]
        v[92] = v[91] + 1
        m[3776] = v[92]

    m[3776] = 0
    while True:
        v[93] = m[3776]
        v[94] = m[g[18]]
        v[95] = int(v[93] < v[94])
        if v[95] == 0:
            break
        v[96] = m[3776]
        v[97] = 1152 + (v[96] << 2)
        v[98] = m[v[97]]
        v[99] = m[3776]
        v[101] = 2336 + (v[99] << 2)
        v[102] = m[v[101]]
        v[103] = 1552 + (v[102] << 2)
        m[v[103]] = v[98]
        v[104] = m[3776]
        v[105] = v[104] + 1
        m[3776] = v[105]

    v[106] = m[g[18]]
    v[107] = m[g[20]]
    v[108] = int(v[106] != v[107])
    if v[108]:
        v[0] = 0
        v[14] = v[0]
        g[16] = v[116]
        return v[14]

    m[3776] = 0
    while True:
        v[109] = m[3776]
        v[110] = m[g[18]]
        v[3] = int(v[109] < v[110])
        if v[3] == 0:
            v[115] = 28
            break
        v[4] = m[3776]
        v[5] = 1552 + (v[4] << 2)
        v[6] = m[v[5]] 
        v[7] = m[3776]
        v[8] = g[19] + (v[7] << 2)
        v[9] = m[v[8]]
        v[10] = int(v[6] != v[9])
        if v[10]:
            v[115] = 26
            break
        v[11] = m[3776]
        v[12] = v[11] + 1
        m[3776] = v[12]
    
    if v[115] == 26:
        v[0] = 0
        v[14] = v[0]
        g[16] = v[116]
        return v[14]
    else:
        if v[115] == 28:
            v[0] = 1
            v[14] = v[0]
            g[16] = v[116]
            return v[14]
    return 0

result = main()
if result == -1:
    print("ERROR!")
elif result == 0:
    print("WRONG!")
else:
    print("RIGHT!")